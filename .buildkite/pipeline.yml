env:
  DRY_RUN: false # set to true to disable publishing releases

steps:
  - name: ":hammer: :linux:"
    command: "scripts/tests.sh"
    plugins:
      docker-compose#v1.8.0:
        run: agent

  - name: ":hammer: :windows:"
    command:
      - "docker-compose -f docker-compose.windows.yml build --pull agent"
      - "docker-compose -f docker-compose.windows.yml run --rm -T agent .\\scripts\\tests.bat"
    agents:
      queue: "windows"

  - wait

  - name: ":windows: 386"
    command: "scripts/build-binary.sh windows 386"
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v1.8.0:
        run: agent

  - name: ":windows: amd64"
    command: "scripts/build-binary.sh windows amd64"
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v1.8.0:
        run: agent

  - name: ":linux: amd64"
    command: "scripts/build-binary.sh linux amd64"
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v1.8.0:
        run: agent

  - name: ":linux: 386"
    command: "scripts/build-binary.sh linux 386"
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v1.8.0:
        run: agent

  - name: ":linux: arm"
    command: "scripts/build-binary.sh linux arm"
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v1.8.0:
        run: agent

  - name: ":linux: armhf"
    command: "scripts/build-binary.sh linux armhf"
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v1.8.0:
        run: agent

  - name: ":linux: arm64"
    command: "scripts/build-binary.sh linux arm64"
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v1.8.0:
        run: agent

  - name: ":mac: 386"
    command: "scripts/build-binary.sh darwin 386"
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v1.8.0:
        run: agent

  - name: ":mac: amd64"
    command: "scripts/build-binary.sh darwin amd64"
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v1.8.0:
        run: agent

  - name: ":freebsd: amd64"
    command: "scripts/build-binary.sh freebsd amd64"
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v1.8.0:
        run: agent

  - name: ":freebsd: 386"
    command: "scripts/build-binary.sh freebsd 386"
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v1.8.0:
        run: agent

  - name: ":openbsd: amd64"
    command: "scripts/build-binary.sh openbsd amd64"
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v1.8.0:
        run: agent

  - name: ":openbsd: 386"
    command: "scripts/build-binary.sh openbsd 386"
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v1.8.0:
        run: agent

  - name: ":dragonflybsd: amd64"
    command: "scripts/build-binary.sh dragonfly amd64"
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v1.8.0:
        run: agent

  - wait

  - name: ":mag:"
    command: "scripts/extract-agent-version-metadata.sh"

  - wait

  - name: ":debian: build"
    command: "scripts/build-debian-packages.sh"
    artifact_paths: "deb/**/*"
    agents:
      queue: "deploy"

  - name: ":redhat: build"
    command: "scripts/build-yum-packages.sh"
    artifact_paths: "rpm/**/*"
    agents:
      queue: "deploy"

  - name: ":github: :hammer:"
    command: "scripts/build-github-release.sh"
    artifact_paths: "releases/**/*"
    plugins:
      docker-compose#v1.8.0:
        config: docker-compose.release.yml
        run: github-release

  - wait

  - name: ":pipeline:"
    command: "scripts/upload-release-steps.sh"
    branches: master
